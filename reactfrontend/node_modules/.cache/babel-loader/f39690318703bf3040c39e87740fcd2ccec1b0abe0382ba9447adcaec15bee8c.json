{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, LOGOUT } from './types';\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.get('http://127.0.0.1:8000/auth/users/me/', config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n      console.log(\"User Loaded Failed\");\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('http://127.0.0.1:8000/auth/jwt/create/', body, config);\n    console.log(body + \" \" + config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","load_user","dispatch","localStorage","getItem","config","headers","res","get","type","payload","data","err","console","log","login","email","password","body","JSON","stringify","post"],"sources":["D:/Project/StudentPerformanceReport/reactfrontend/src/Actions/auth.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n        try {\r\n            const res = await axios.get('http://127.0.0.1:8000/auth/users/me/', config);\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n            console.log(\"User Loaded Failed\")\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('http://127.0.0.1:8000/auth/jwt/create/',body, config);\r\n        console.log(body +\" \"+  config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACIC,aAAa,EACbC,UAAU,EACVC,mBAAmB,EACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,kBAAkB,EAClBC,MAAM,QACH,SAAS;AAEhB,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAC7C,IAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChC,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,OAAMH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;QACxD,QAAQ,EAAE;MACd;IACJ,CAAC;IACD,IAAI;MACA,MAAMG,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,sCAAsC,EAAEH,MAAM,CAAC;MAC3EH,QAAQ,CAAC;QACLO,IAAI,EAAEb,mBAAmB;QACzBc,OAAO,EAAEH,GAAG,CAACI;MACjB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVV,QAAQ,CAAC;QACLO,IAAI,EAAEZ;MACV,CAAC,CAAC;MACFgB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC;EACJ,CAAC,MAAM;IACHZ,QAAQ,CAAC;MACLO,IAAI,EAAEZ;IACV,CAAC,CAAC;EACN;AACJ,CAAC;AAGD,OAAO,MAAMkB,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAMf,QAAQ,IAAI;EACxD,MAAMG,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,MAAMY,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEJ,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEhD,IAAI;IACA,MAAMV,GAAG,GAAG,MAAMd,KAAK,CAAC4B,IAAI,CAAC,wCAAwC,EAACH,IAAI,EAAEb,MAAM,CAAC;IACnFQ,OAAO,CAACC,GAAG,CAACI,IAAI,GAAE,GAAG,GAAGb,MAAM,CAAC;IAC/BH,QAAQ,CAAC;MACLO,IAAI,EAAEf,aAAa;MACnBgB,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IAEFT,QAAQ,CAACD,SAAS,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOW,GAAG,EAAE;IACVV,QAAQ,CAAC;MACLO,IAAI,EAAEd;IACV,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}