{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\StudentPerformanceReport\\\\reactfrontend\\\\src\\\\Components\\\\AttendanceCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AttendanceCard() {\n  _s();\n  const [attendance, setAttendance] = useState();\n  const std_id = '221851';\n  useEffect = () => {\n    const fetchData = async () => {\n      let config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `JWT ${localStorage.getItem('access')}`,\n          'Accept': 'application/json'\n        }\n      };\n      try {\n        const response = axios.get(`http://127.0.0.1:8000/attendance/${std_id}/`, config);\n        setAttendance(response.data);\n      } catch (error) {\n        console.log(\"Couldn't get attendance\");\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n      completed: attendance,\n      bgColor: \"#4942bc\",\n      animateOnRender: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(AttendanceCard, \"euwmRUZBK4qf3pt+NU+mYNHIwBo=\");\n_c = AttendanceCard;\nvar _c;\n$RefreshReg$(_c, \"AttendanceCard\");","map":{"version":3,"names":["React","ProgressBar","useEffect","useState","axios","jsxDEV","_jsxDEV","AttendanceCard","_s","attendance","setAttendance","std_id","fetchData","config","headers","localStorage","getItem","response","get","data","error","console","log","children","completed","bgColor","animateOnRender","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/StudentPerformanceReport/reactfrontend/src/Components/AttendanceCard.js"],"sourcesContent":["import React from 'react';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { useEffect,useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nexport default function AttendanceCard(){\r\n    const [attendance,setAttendance] = useState();\r\n    const std_id = '221851'\r\n\r\n    useEffect = () =>{\r\n      const fetchData = async() =>{\r\n        let config = {\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n              'Accept': 'application/json'\r\n          }\r\n      };\r\n\r\n          try{\r\n            const response = axios.get(`http://127.0.0.1:8000/attendance/${std_id}/`,config)\r\n            setAttendance(response.data)\r\n          }catch(error){\r\n            console.log(\"Couldn't get attendance\")\r\n          }\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <ProgressBar completed={attendance} bgColor='#4942bc' animateOnRender/>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,6BAA6B;AACrD,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC7C,MAAMQ,MAAM,GAAG,QAAQ;EAEvBT,SAAS,GAAGA,CAAA,KAAK;IACf,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAU;MAC1B,IAAIC,MAAM,GAAG;QACXC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,OAAMC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;UACxD,QAAQ,EAAE;QACd;MACJ,CAAC;MAEG,IAAG;QACD,MAAMC,QAAQ,GAAGb,KAAK,CAACc,GAAG,CAAE,oCAAmCP,MAAO,GAAE,EAACE,MAAM,CAAC;QAChFH,aAAa,CAACO,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,QAAMC,KAAK,EAAC;QACXC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACxC;IACJ,CAAC;EACH,CAAC;EAED,oBACIhB,OAAA;IAAAiB,QAAA,eACAjB,OAAA,CAACL,WAAW;MAACuB,SAAS,EAAEf,UAAW;MAACgB,OAAO,EAAC,SAAS;MAACC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd;AAACtB,EAAA,CA5BuBD,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}