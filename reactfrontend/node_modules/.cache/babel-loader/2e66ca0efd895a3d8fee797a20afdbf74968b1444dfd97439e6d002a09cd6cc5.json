{"ast":null,"code":"function deg2rad(angle) {\n  return Math.PI * angle / 180;\n}\nfunction getPoint(angle) {\n  const radAngle = deg2rad(angle);\n  return [Math.sin(radAngle), -Math.cos(radAngle)];\n}\n\n/**\n * Returns the ratio of the arc bounding box and its center.\n * @param startAngle The start angle (in deg)\n * @param endAngle The end angle (in deg)\n */\nexport function getArcRatios(startAngle, endAngle) {\n  // Set the start, end and center point.\n  const points = [[0, 0], getPoint(startAngle), getPoint(endAngle)];\n\n  // Add cardinal points included in the arc\n  const minAngle = Math.min(startAngle, endAngle);\n  const maxAngle = Math.max(startAngle, endAngle);\n  const initialAngle = Math.floor(minAngle / 90) * 90;\n  for (let step = 1; step <= 4; step += 1) {\n    const cardinalAngle = initialAngle + step * 90;\n    if (cardinalAngle < maxAngle) {\n      points.push(getPoint(cardinalAngle));\n    }\n  }\n  const minX = Math.min(...points.map(_ref => {\n    let [x] = _ref;\n    return x;\n  }));\n  const maxX = Math.max(...points.map(_ref2 => {\n    let [x] = _ref2;\n    return x;\n  }));\n  const minY = Math.min(...points.map(_ref3 => {\n    let [, y] = _ref3;\n    return y;\n  }));\n  const maxY = Math.max(...points.map(_ref4 => {\n    let [, y] = _ref4;\n    return y;\n  }));\n  return {\n    cx: -minX / (maxX - minX),\n    cy: -minY / (maxY - minY),\n    minX,\n    maxX,\n    minY,\n    maxY\n  };\n}\nexport function getAvailableRadius(cx, cy, width, height, _ref5) {\n  let {\n    minX,\n    maxX,\n    minY,\n    maxY\n  } = _ref5;\n  return Math.min(...[{\n    ratio: Math.abs(minX),\n    space: cx\n  }, {\n    ratio: Math.abs(maxX),\n    space: width - cx\n  }, {\n    ratio: Math.abs(minY),\n    space: cy\n  }, {\n    ratio: Math.abs(maxY),\n    space: height - cy\n  }].map(_ref6 => {\n    let {\n      ratio,\n      space\n    } = _ref6;\n    if (ratio < 0.00001) {\n      return Infinity;\n    }\n    return space / ratio;\n  }));\n}","map":{"version":3,"names":["deg2rad","angle","Math","PI","getPoint","radAngle","sin","cos","getArcRatios","startAngle","endAngle","points","minAngle","min","maxAngle","max","initialAngle","floor","step","cardinalAngle","push","minX","map","_ref","x","maxX","_ref2","minY","_ref3","y","maxY","_ref4","cx","cy","getAvailableRadius","width","height","_ref5","ratio","abs","space","_ref6","Infinity"],"sources":["D:/Project/StudentPerformanceReport/reactfrontend/node_modules/@mui/x-charts/esm/Gauge/utils.js"],"sourcesContent":["function deg2rad(angle) {\n  return Math.PI * angle / 180;\n}\nfunction getPoint(angle) {\n  const radAngle = deg2rad(angle);\n  return [Math.sin(radAngle), -Math.cos(radAngle)];\n}\n\n/**\n * Returns the ratio of the arc bounding box and its center.\n * @param startAngle The start angle (in deg)\n * @param endAngle The end angle (in deg)\n */\nexport function getArcRatios(startAngle, endAngle) {\n  // Set the start, end and center point.\n  const points = [[0, 0], getPoint(startAngle), getPoint(endAngle)];\n\n  // Add cardinal points included in the arc\n  const minAngle = Math.min(startAngle, endAngle);\n  const maxAngle = Math.max(startAngle, endAngle);\n  const initialAngle = Math.floor(minAngle / 90) * 90;\n  for (let step = 1; step <= 4; step += 1) {\n    const cardinalAngle = initialAngle + step * 90;\n    if (cardinalAngle < maxAngle) {\n      points.push(getPoint(cardinalAngle));\n    }\n  }\n  const minX = Math.min(...points.map(([x]) => x));\n  const maxX = Math.max(...points.map(([x]) => x));\n  const minY = Math.min(...points.map(([, y]) => y));\n  const maxY = Math.max(...points.map(([, y]) => y));\n  return {\n    cx: -minX / (maxX - minX),\n    cy: -minY / (maxY - minY),\n    minX,\n    maxX,\n    minY,\n    maxY\n  };\n}\nexport function getAvailableRadius(cx, cy, width, height, {\n  minX,\n  maxX,\n  minY,\n  maxY\n}) {\n  return Math.min(...[{\n    ratio: Math.abs(minX),\n    space: cx\n  }, {\n    ratio: Math.abs(maxX),\n    space: width - cx\n  }, {\n    ratio: Math.abs(minY),\n    space: cy\n  }, {\n    ratio: Math.abs(maxY),\n    space: height - cy\n  }].map(({\n    ratio,\n    space\n  }) => {\n    if (ratio < 0.00001) {\n      return Infinity;\n    }\n    return space / ratio;\n  }));\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}