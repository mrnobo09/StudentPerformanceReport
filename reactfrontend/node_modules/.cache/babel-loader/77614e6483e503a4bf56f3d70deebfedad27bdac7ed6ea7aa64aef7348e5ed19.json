{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, LOGOUT } from './types';\n\n// Check if the user is authenticated\nexport const checkAuthenticated = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      token: localStorage.getItem('access')\n    });\n    try {\n      const res = await axios.post('http://127.0.0.1:8000/auth/jwt/verify/', body, config);\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATED_FAIL\n      });\n      console.error('Error verifying token:', err);\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL\n    });\n  }\n};\n\n// Load user details\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.get('http://127.0.0.1:8000/auth/users/me/', config);\n      console.log(\"User data loaded: \", res.data.first_name); // Ensure you're logging the correct data\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n      localStorage.setItem(\"user_id\", JSON.stringify(res.data.id));\n      localStorage.setItem(\"user_first_name\", JSON.stringify(res.data.first_name));\n      localStorage.setItem(\"user_last_name\", JSON.stringify(res.data.last_name));\n      localStorage.setItem(\"user_email\", JSON.stringify(res.data.email));\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n      console.error('Error loading user:', err);\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\n\n// Login user\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('http://127.0.0.1:8000/auth/jwt/create/', body, config);\n    console.log(\"Login response data: \", res.data); // Ensure you're logging the correct data\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    console.error('Error during login:', err);\n  }\n};\n\n// Logout user\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  localStorage.removeItem('access');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('user_first_name');\n  localStorage.removeItem('user_last_name');\n  localStorage.removeItem('user_email');\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","checkAuthenticated","dispatch","localStorage","getItem","config","headers","body","JSON","stringify","token","res","post","data","code","type","err","console","error","load_user","get","log","first_name","payload","setItem","id","last_name","email","login","password","logout","removeItem"],"sources":["D:/Project/StudentPerformanceReport/reactfrontend/src/Actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\n// Check if the user is authenticated\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post('http://127.0.0.1:8000/auth/jwt/verify/', body, config);\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({ type: AUTHENTICATED_SUCCESS });\r\n            } else {\r\n                dispatch({ type: AUTHENTICATED_FAIL });\r\n            }\r\n        } catch (err) {\r\n            dispatch({ type: AUTHENTICATED_FAIL });\r\n            console.error('Error verifying token:', err);\r\n        }\r\n    } else {\r\n        dispatch({ type: AUTHENTICATED_FAIL });\r\n    }\r\n};\r\n\r\n// Load user details\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n        try {\r\n            const res = await axios.get('http://127.0.0.1:8000/auth/users/me/', config);\r\n            console.log(\"User data loaded: \", res.data.first_name);  // Ensure you're logging the correct data\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            localStorage.setItem(\"user_id\", JSON.stringify(res.data.id));\r\n            localStorage.setItem(\"user_first_name\", JSON.stringify(res.data.first_name));\r\n            localStorage.setItem(\"user_last_name\",JSON.stringify(res.data.last_name));\r\n            localStorage.setItem(\"user_email\",JSON.stringify(res.data.email))\r\n        } catch (err) {\r\n            dispatch({ type: USER_LOADED_FAIL });\r\n            console.error('Error loading user:', err);\r\n        }\r\n    } else {\r\n        dispatch({ type: USER_LOADED_FAIL });\r\n    }\r\n};\r\n\r\n// Login user\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('http://127.0.0.1:8000/auth/jwt/create/', body, config);\r\n        console.log(\"Login response data: \", res.data);  // Ensure you're logging the correct data\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({ type: LOGIN_FAIL });\r\n        console.error('Error during login:', err);\r\n    }\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n    localStorage.removeItem('access');\r\n    localStorage.removeItem('user_id');\r\n    localStorage.removeItem('user_first_name');\r\n    localStorage.removeItem('user_last_name');\r\n    localStorage.removeItem('user_email');\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}